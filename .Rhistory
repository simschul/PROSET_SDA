1:4,
1:4,
1:4,
1)) %>% as.matrix,
expand.grid(list(c(1),
1:4,
1:4,
1:4,
1:4,
1)) %>% as.matrix
)
indices
indices <- lapply(indices, function(x) x - 1)
test <- SPD(table0 = table0, table1 = table1, indices)
test[[1]] %>% colSums() %>% sum
test
Rcpp::sourceCpp('SPD_functions.cpp')
Rcpp::sourceCpp('SPD_functions.cpp')
indices <- list(expand.grid(list(c(1),
1:4,
1:4,
1)) %>% as.matrix,
expand.grid(list(c(1),
1:4,
1:4,
1:4,
1)) %>% as.matrix,
expand.grid(list(c(1),
1:4,
1:4,
1:4,
1:4,
1)) %>% as.matrix
)
test <- SPD(table0 = table0, table1 = table1, indices)
test[[1]] %>% colSums() %>% sum
test
indices
table0
table1
Rcpp::sourceCpp('SPD_functions.cpp')
Rcpp::sourceCpp('SPD_functions.cpp')
Rcpp::sourceCpp('SPD_functions.cpp')
Rcpp::sourceCpp('SPD_functions.cpp')
Rcpp::sourceCpp('test.cpp')
Rcpp::sourceCpp('SPD_functions.cpp')
Rcpp::sourceCpp('SPD_functions.cpp')
Rcpp::sourceCpp('SPD_functions.cpp')
indices
indices <- list(expand.grid(list(c(1),
1:4,
1:4,
1)) %>% as.matrix,
expand.grid(list(c(1),
1:4,
1:4,
1:4,
1)) %>% as.matrix,
expand.grid(list(c(1),
1:4,
1:4,
1:4,
1:4,
1)) %>% as.matrix
)
indices
test <- SPD(table0 = table0, table1 = table1, indices)
test
test[[1]] %>% colSums() %>% sum
indices
Rcpp::sourceCpp('SPD_functions.cpp')
Rcpp::sourceCpp('SPD_functions.cpp')
Rcpp::sourceCpp('SPD_functions.cpp')
indices <- list(expand.grid(list(c(1),
1:4,
1:4,
1)) %>% as.matrix,
expand.grid(list(c(1),
1:4,
1:4,
1:4,
1)) %>% as.matrix,
expand.grid(list(c(1),
1:4,
1:4,
1:4,
1:4,
1)) %>% as.matrix
)
indices
test <- SPD(table0 = table0, table1 = table1, indices)
indices
Rcpp::sourceCpp('SPD_functions.cpp')
indices <- list(expand.grid(list(c(1),
1:4,
1:4,
1)) %>% as.matrix,
expand.grid(list(c(1),
1:4,
1:4,
1:4,
1)) %>% as.matrix,
expand.grid(list(c(1),
1:4,
1:4,
1:4,
1:4,
1)) %>% as.matrix
)
test <- SPD(table0 = table0, table1 = table1, indices)
test
test[[1]] %>% colSums() %>% sum
indices
Rcpp::sourceCpp('SPD_functions.cpp')
test <- SPD(table0 = table0, table1 = table1, indices)
indices
test
table0
table1
indices <- list(expand.grid(list(c(1),
1:4,
1:4,
1)) %>% as.matrix,
expand.grid(list(c(1),
1:4,
1:4,
1:4,
1)) %>% as.matrix,
expand.grid(list(c(1),
1:4,
1:4,
1:4,
1:4,
1)) %>% as.matrix
)
indices
indices <- lapply(indices, function(x) x - 1)
test <- SPD(table0 = table0, table1 = table1, indices)
test[[1]] %>% colSums() %>% sum
test
indices
indices <- list(expand.grid(list(c(1),
1:4,
1:4,
1)) %>% as.matrix,
expand.grid(list(c(1),
1:4,
1:4,
1:4,
1)) %>% as.matrix,
expand.grid(list(c(1),
1:4,
1:4,
1:4,
1:4,
1)) %>% as.matrix
)
test <- SPD(table0 = table0, table1 = table1, indices)
test[[1]] %>% colSums() %>% sum
test
Rcpp::sourceCpp('SPD_functions.cpp')
indices <- list(expand.grid(list(c(1),
1:4,
1:4,
1)) %>% as.matrix,
expand.grid(list(c(1),
1:4,
1:4,
1:4,
1)) %>% as.matrix,
expand.grid(list(c(1),
1:4,
1:4,
1:4,
1:4,
1)) %>% as.matrix
)
test <- SPD(table0 = table0, table1 = table1, indices)
test
test[[1]] %>% colSums() %>% sum
indices
Rcpp::sourceCpp('SPD_functions.cpp')
indices <- list(expand.grid(list(c(1),
1:4,
1:4,
1)) %>% as.matrix,
expand.grid(list(c(1),
1:4,
1:4,
1:4,
1)) %>% as.matrix,
expand.grid(list(c(1),
1:4,
1:4,
1:4,
1:4,
1)) %>% as.matrix
)
indices <- lapply(indices, function(x) x - 1)
test <- SPD(table0 = table0, table1 = table1, indices)
test
test[[1]] %>% colSums() %>% sum
indices
Rcpp::sourceCpp('SPD_functions.cpp')
indices <- list(expand.grid(list(c(1),
1:4,
1:4,
1)) %>% as.matrix,
expand.grid(list(c(1),
1:4,
1:4,
1:4,
1)) %>% as.matrix,
expand.grid(list(c(1),
1:4,
1:4,
1:4,
1:4,
1)) %>% as.matrix
)
test <- SPD(table0 = table0, table1 = table1, indices)
test
test[[1]] %>% colSums() %>% sum
indices
Rcpp::sourceCpp('SPD_functions.cpp')
test <- SPD(table0 = table0, table1 = table1, indices)
test[[1]] %>% colSums() %>% sum
test[[2]] %>% colSums() %>% sum
table0
S0
(S1 %*% A1 %*% A1 %*% Y1) - (S0 %*% A0 %*% A0 %*% Y0)
test[[2]] %>% colSums() %>% sum
Rcpp::sourceCpp('SPD_functions.cpp')
data_list
# _c) analyse data ---------------------------------------------------------
years <- c(1995, 2011)
files <- list.files(path = file.path(path2temp_results),
pattern = "sector906_", full.names = TRUE)
data <- lapply(files, fread) %>%
setNames(years %>% as.character) %>%
rbindlist(idcol = "year") %>%
.[, year := as.numeric(year)]
# split datatable into 2: one with info on paths, one with values
cols <- paste0("dim", n_layers:1)
pathID <- do.call(paste, c(data[, ..cols], sep = "-")) %>%
gsub("NA-", "", .)
data[, "pathID" := pathID]
data_list <- list("paths" = data[, c("pathID", "order", paste0("dim", 1:n_layers),
"supply_chain", "emitter",
paste0("dim", 1:n_layers, "_country"),
paste0("dim", 1:n_layers, "_industry")),
with = FALSE] %>% unique,
"values" = data[, c("pathID","rank", "year", "order", "value[t]")])
data_list
path_extract(data_list$values[order == 4]$pathID)
# functions
path_extract <- function(string){
unlist(regmatches(string, gregexpr("[[:digit:]]+\\.*[[:digit:]]*", string))) %>%
as.numeric
}
path_extract(data_list$values[order == 4]$pathID)
path_extract(data_list$values[order == 4]$pathID)
#TODO
i1 <- data_list$paths[pathID %in% data_list$values[order == 2]$pathID]$dim2
i1
#TODO
path_extract <- function(string){
unlist(regmatches(string, gregexpr("[[:digit:]]+\\.*[[:digit:]]*", string))) %>%
as.numeric
}
data_list$values[order == 4]$pathID
#TODO
path_extract <- function(string){
lapply(string, function(x) {
(regmatches(x, gregexpr("[[:digit:]]+\\.*[[:digit:]]*", x))) %>%
as.numeric
})
}
path_extract(data_list$values[order == 4]$pathID)
data_list$values[order == 4]$pathID
#TODO
path_extract <- function(string){
string <- as.list(string)
lapply(string, function(x) {
(regmatches(x, gregexpr("[[:digit:]]+\\.*[[:digit:]]*", x))) %>%
as.numeric
})
}
path_extract(data_list$values[order == 4]$pathID)
data_list$values[order == 4]$pathID %>% as.list
#TODO
path_extract <- function(string){
unlist(regmatches(string, gregexpr("[[:digit:]]+\\.*[[:digit:]]*", string))) %>%
as.numeric
}
lapply(data_list$values[order == 4]$pathID %>% as.list, function(x) {
path_extract(x)
})
lapply(data_list$values[order == 4]$pathID %>% as.list, function(x) {
path_extract(x)
}) %>% matrix
lapply(data_list$values[order == 4]$pathID %>% as.list, function(x) {
path_extract(x)
}) %>% unlist
sapply(data_list$values[order == 4]$pathID %>% as.list, function(x) {
path_extract(x)
})
sapply(data_list$values[order == 4]$pathID %>% as.list, function(x) {
path_extract(x)
}) %>% dim
sapply(data_list$values[order == 4]$pathID %>% as.list, function(x) {
path_extract(x)
}) %>% t
n_layers
indices_list <- vector("list", length = n_layers)
for(i in 1:n_layers) {
indices_list[[i]] <- sapply(data_list$values[order == i]$pathID %>% as.list,
function(x) {
path_extract(x)
}) %>% t
}
indices_list
indices_list[[1]]
indices_list[[2]]
# _d) Extract largest paths (absolute + change) --------------------------------
data_list$values[, "value_dif" := diff(`value[t]`), by = pathID]
data_list$values
library(data.table)
library(tidyverse)
############################################################################## #
##### settings #################################################################
############################################################################## #
source("./settings.R")
source("./functions.R")
# _c) analyse data ---------------------------------------------------------
years <- c(1995, 2011)
files <- list.files(path = file.path(path2temp_results),
pattern = "sector906_", full.names = TRUE)
data <- lapply(files, fread) %>%
setNames(years %>% as.character) %>%
rbindlist(idcol = "year") %>%
.[, year := as.numeric(year)]
# split datatable into 2: one with info on paths, one with values
cols <- paste0("dim", n_layers:1)
pathID <- do.call(paste, c(data[, ..cols], sep = "-")) %>%
gsub("NA-", "", .)
data[, "pathID" := pathID]
data_list <- list("paths" = data[, c("pathID", "order", paste0("dim", 1:n_layers),
"supply_chain", "emitter",
paste0("dim", 1:n_layers, "_country"),
paste0("dim", 1:n_layers, "_industry")),
with = FALSE] %>% unique,
"values" = data[, c("pathID","rank", "year", "order", "value[t]")])
# _d) Extract largest paths (absolute + change) --------------------------------
data_list$values[, "value_dif" := diff(`value[t]`), by = pathID]
data_list$values
indices_list <- vector("list", length = n_layers)
for(i in 1:n_layers) {
indices_list[[i]] <- sapply(data_list$values[order == i]$pathID %>% as.list,
function(x) {
path_extract(x)
}) %>% t
}
indices_list[[2]]
indices_list[[6]]
indices_list <- vector("list", length = n_layers)
for(i in 1:n_layers) {
indices_list[[i]] <- sapply(data_list$values[order == i & rank > 200]$pathID %>% as.list,
function(x) {
path_extract(x)
}) %>% t
}
indices_list[[6]]
indices_list
for(i in 1:n_layers) {
indices_list[[i]] <- sapply(data_list$values[order == i & rank < 200]$pathID %>% as.list,
function(x) {
path_extract(x)
}) %>% t
}
indices_list[[6]]
indices_list
lapply(indices_list, function(x) {
cbind(1, x)
})
cbind(1, x, 1)
lapply(indices_list, function(x) {
cbind(1, x, 1)
})
indices_list <- lapply(indices_list, function(x) {
cbind(1, x, 1)
})
indices_list[[1]]
indices_list[[2]]
indices_list[[1]] <- NULL
Rcpp::sourceCpp('SPD_functions.cpp')
# load data
year0 <- 1995
# load data
year0 <- 1995
S0 <- fread(file.path(path2exiobase, paste0("S_", year0, ".csv"))) %>%
.[ids_stressor,] %>% as.matrix %>% colSums(na.rm = TRUE) %>%
matrix(nrow = 1)# only CO2 emissions
L0 <- fread(file.path(path2exiobase, paste0("L_", year0, ".csv"))) %>% as.matrix
A0 <- fread(file.path(path2exiobase, paste0("A_", year0, ".csv"))) %>% as.matrix
Y0 <- fread(file.path(path2exiobase, paste0("Y_", year0, ".csv")), select = ids_fd) %>%
as.matrix %>% rowSums
year1 <- 1995
S1 <- fread(file.path(path2exiobase, paste0("S_", year1, ".csv"))) %>%
.[ids_stressor,] %>% as.matrix %>% colSums(na.rm = TRUE) %>%
matrix(nrow = 1)# only CO2 emissions
L1 <- fread(file.path(path2exiobase, paste0("L_", year1, ".csv"))) %>% as.matrix
A1 <- fread(file.path(path2exiobase, paste0("A_", year1, ".csv"))) %>% as.matrix
Y1 <- fread(file.path(path2exiobase, paste0("Y_", year1, ".csv")), select = ids_fd) %>%
as.matrix %>% rowSums
x0 <- calculate_x(Y = Y0, L = L0)
x1 <- calculate_x(Y = Y1, L = L1)
SPD
table0 <- list("S" = S0, "A" = A0, "x" = x0)
table1 <- list("S" = S1, "A" = A1, "x" = x1)
indices_list
system.time(test <- SPD(table0, table1, indices = indices_list))
test
table0
test
Rcpp::sourceCpp('SPD_functions.cpp')
system.time(test <- SPD(table0, table1, indices = indices_list))
test
indices_list
x0[,1]
x0[,2]
S0[1,]
S0[2,]
extract_selected
extract_selected(table0, indices_list[[1]])
indices_list[[1]]
names(table0)
inds <- indices_list[[1]][1,]
inds
S0[1,911] * A[911,906] * x[906,1]
S0[1,911]
S0[1,911] * A0[911,906] * x0[906,1]
x1 <- calculate_x(Y = Y1, L = L1)
table1 <- list("S" = S1, "A" = A1, "x" = x1)
table0 <- list("S" = S0, "A" = A0, "x" = x0)
x0 <- calculate_x(Y = Y0, L = L0)
table0 <- list("S" = S0, "A" = A0, "x" = x0)
system.time(test <- SPD(table0, table1, indices = indices_list))
system.time(test <- SPD(table0, table1, indices = indices_list))
test
year1 <- 2011
S1 <- fread(file.path(path2exiobase, paste0("S_", year1, ".csv"))) %>%
.[ids_stressor,] %>% as.matrix %>% colSums(na.rm = TRUE) %>%
matrix(nrow = 1)# only CO2 emissions
L1 <- fread(file.path(path2exiobase, paste0("L_", year1, ".csv"))) %>% as.matrix
A1 <- fread(file.path(path2exiobase, paste0("A_", year1, ".csv"))) %>% as.matrix
Y1 <- fread(file.path(path2exiobase, paste0("Y_", year1, ".csv")), select = ids_fd) %>%
as.matrix %>% rowSums
x1 <- calculate_x(Y = Y1, L = L1)
table1 <- list("S" = S1, "A" = A1, "x" = x1)
system.time(test <- SPD(table0, table1, indices = indices_list))
test
lapply(test, colSums)
id_sector
gc()
############################################################################## #
##### settings #################################################################
############################################################################## #
# _a) Load external settings and functions -------------------------------------
source("./settings.R")
source("./functions.R")
Rcpp::sourceCpp("SPA_functions.cpp")
id_sector <- colnames_A_mat[country == "Germany" & grepl("Manufacture of motor vehicles", industry)]$id
years <- c(1995, 2011)
id_sector
files <- list.files(path = file.path(path2temp_results),
pattern = "sector906_", full.names = TRUE)
files
data <- lapply(files, fread) %>%
setNames(years %>% as.character) %>%
rbindlist(idcol = "year") %>%
.[, year := as.numeric(year)]
# split datatable into 2: one with info on paths, one with values
cols <- paste0("dim", n_layers:1)
data
data
data[, max(order)]
n_layers <- data[, max(order)]
# split datatable into 2: one with info on paths, one with values
cols <- paste0("dim", n_layers:1)
pathID <- do.call(paste, c(data[, ..cols], sep = "-")) %>%
gsub("NA-", "", .)
data[, "pathID" := pathID]
data_list <- list("paths" = data[, c("pathID", "order", paste0("dim", 1:n_layers),
"supply_chain", "emitter",
paste0("dim", 1:n_layers, "_country"),
paste0("dim", 1:n_layers, "_industry")),
with = FALSE] %>% unique,
"values" = data[, c("pathID","rank", "year", "order", "value[t]")])
# 2. Save to disk --------------------------------------------------------------
saveRDS(data_list, file = file.path(path2temp_results, "SPAdata2analyse.RData"))
data_list
start_R_script("2_bla.R")
data_list
n_layers <- data_list$paths[, max(order)]
n_layers
years
years <- data_list$values[, unique(year)]
years
# _b) EB3 for two years --------------------------------------------------------
table <- create_named_list(years)
table
